# Generated by roxygen2: do not edit by hand

S3method(vegTypeMapGenerator,RasterStack)
S3method(vegTypeMapGenerator,data.table)
export(.cleanLandWebStudyArea)
export(CASFRItoSpRasts)
export(LANDISDisp)
export(Ward)
export(WardFast)
export(addNoPixel2CohortData)
export(addPixels2CohortData)
export(asInteger)
export(assert1)
export(assert2)
export(assertCohortData)
export(assertColumns)
export(assertERGs)
export(assertFireToleranceDif)
export(assertPixelCohortData)
export(assertRstLCChange)
export(assertSpeciesEcoregionCohortDataMatch)
export(assertSpeciesLayers)
export(assertSpeciesPlotLabels)
export(assertUniqueCohortData)
export(assignLightProb)
export(calcSiteShade)
export(calculateClimateEffect)
export(checkSpeciesTraits)
export(columnsForPixelGroups)
export(convertUnwantedLCC)
export(defineFlammable)
export(describeCohortData)
export(doResprouting)
export(doSerotiny)
export(ecoregionProducer)
export(equivalentName)
export(equivalentNameColumn)
export(fasterizeFromSp)
export(generatePixelGroups)
export(getSpeciesTable)
export(loadCASFRI)
export(loadkNNSpeciesLayers)
export(loadkNNSpeciesLayersValidation)
export(makeAndCleanInitialCohortData)
export(makeBiomassMap)
export(makeCohortDataFiles)
export(makeDummyEcoregionFiles)
export(makeDummyEcoregionMap)
export(makeDummyRawBiomassMap)
export(makeDummyRstLCC)
export(makeDummyStandAgeMap)
export(makeEcoregionDT)
export(makeEcoregionMap)
export(makeMinRelativeB)
export(makePickellStack)
export(makePixelGroupMap)
export(makePixelTable)
export(makeSpeciesEcoregion)
export(makeVegTypeMap)
export(overlayLCCs)
export(overlayStacks)
export(partitionBiomass)
export(pixelFate)
export(plantNewCohorts)
export(plotVTM)
export(polygonClean)
export(prepEcoregions)
export(prepInputsEcoregion)
export(prepInputsFireYear)
export(prepInputsLCC)
export(prepInputsMainInput)
export(prepInputsSpecies)
export(prepInputsSpeciesEcoregion)
export(prepInputsStandAgeMap)
export(prepSpeciesLayers_CASFRI)
export(prepSpeciesLayers_ForestInventory)
export(prepSpeciesLayers_KNN)
export(prepSpeciesLayers_KNN2011)
export(prepSpeciesLayers_ONFRI)
export(prepSpeciesLayers_Pickell)
export(prepSpeciesTable)
export(randomStudyArea)
export(rmMissingCohorts)
export(scheduleDisturbance)
export(speciesEcoregionLatestYear)
export(speciesTableUpdate)
export(spiralSeedDispersal)
export(sppColors)
export(statsModel)
export(subsetDT)
export(sumRastersBySpecies)
export(uniqueCohortDefinition)
export(uniqueSpeciesEcoregionDefinition)
export(updateCohortData)
export(updateCohortDataPostHarvest)
export(updateSpeciesTable)
export(vegTypeGenerator)
export(vegTypeMapGenerator)
import(methods)
importFrom(MuMIn,r.squaredGLMM)
importFrom(RColorBrewer,brewer.pal)
importFrom(RColorBrewer,brewer.pal.info)
importFrom(RCurl,getURL)
importFrom(Rcpp,sourceCpp)
importFrom(SpaDES.tools,gaussMap)
importFrom(SpaDES.tools,inRange)
importFrom(SpaDES.tools,randomPolygons)
importFrom(SpaDES.tools,rasterizeReduced)
importFrom(SpaDES.tools,spread2)
importFrom(XML,getHTMLLinks)
importFrom(assertthat,assert_that)
importFrom(crayon,blue)
importFrom(crayon,green)
importFrom(crayon,magenta)
importFrom(crayon,red)
importFrom(data.table,as.data.table)
importFrom(data.table,copy)
importFrom(data.table,data.table)
importFrom(data.table,fread)
importFrom(data.table,is.data.table)
importFrom(data.table,melt)
importFrom(data.table,rbindlist)
importFrom(data.table,set)
importFrom(data.table,setcolorder)
importFrom(data.table,setkey)
importFrom(data.table,setkeyv)
importFrom(data.table,setnames)
importFrom(data.table,setorderv)
importFrom(fasterize,fasterize)
importFrom(fpCompare,"%<<%")
importFrom(fpCompare,"%<=%")
importFrom(fpCompare,"%>>%")
importFrom(gdalUtils,gdalwarp)
importFrom(ggplot2,aes)
importFrom(ggplot2,element_blank)
importFrom(ggplot2,element_text)
importFrom(ggplot2,geom_bar)
importFrom(ggplot2,ggplot)
importFrom(ggplot2,guide_legend)
importFrom(ggplot2,guides)
importFrom(ggplot2,scale_fill_manual)
importFrom(ggplot2,scale_x_discrete)
importFrom(ggplot2,theme)
importFrom(grDevices,colorRampPalette)
importFrom(httr,config)
importFrom(httr,with_config)
importFrom(lme4,glmer)
importFrom(lme4,lmer)
importFrom(magrittr,"%>%")
importFrom(map,mapAdd)
importFrom(map,maps)
importFrom(pemisc,createPrjFile)
importFrom(pemisc,factorValues2)
importFrom(pemisc,messageDF)
importFrom(pemisc,termsInData)
importFrom(quickPlot,"setColors<-")
importFrom(quickPlot,Plot)
importFrom(quickPlot,layerNames)
importFrom(quickPlot,numLayers)
importFrom(raster,"crs<-")
importFrom(raster,"projection<-")
importFrom(raster,addLayer)
importFrom(raster,calc)
importFrom(raster,compareRaster)
importFrom(raster,crs)
importFrom(raster,dropLayer)
importFrom(raster,extent)
importFrom(raster,factorValues)
importFrom(raster,filename)
importFrom(raster,getValues)
importFrom(raster,levels)
importFrom(raster,mask)
importFrom(raster,maxValue)
importFrom(raster,minValue)
importFrom(raster,ncell)
importFrom(raster,nlayers)
importFrom(raster,projectExtent)
importFrom(raster,projection)
importFrom(raster,raster)
importFrom(raster,rasterOptions)
importFrom(raster,ratify)
importFrom(raster,reclassify)
importFrom(raster,res)
importFrom(raster,setValues)
importFrom(raster,shapefile)
importFrom(raster,stack)
importFrom(raster,unstack)
importFrom(raster,writeRaster)
importFrom(raster,xmax)
importFrom(raster,xmin)
importFrom(raster,xyFromCell)
importFrom(raster,ymax)
importFrom(raster,ymin)
importFrom(reproducible,.prefix)
importFrom(reproducible,.sortDotsUnderscoreFirst)
importFrom(reproducible,.suffix)
importFrom(reproducible,Cache)
importFrom(reproducible,asPath)
importFrom(reproducible,basename2)
importFrom(reproducible,fixErrors)
importFrom(reproducible,paddedFloatToChar)
importFrom(reproducible,preProcess)
importFrom(reproducible,prepInputs)
importFrom(scales,rescale)
importFrom(sf,st_as_sf)
importFrom(sf,st_cast)
importFrom(sf,st_crs)
importFrom(sf,st_transform)
importFrom(stats,as.formula)
importFrom(stats,complete.cases)
importFrom(stats,fitted)
importFrom(stats,glm)
importFrom(stats,na.omit)
importFrom(stats,predict)
importFrom(stats,runif)
importFrom(tools,file_path_sans_ext)
importFrom(utils,capture.output)
importFrom(utils,count.fields)
importFrom(utils,data)
importFrom(utils,getFromNamespace)
importFrom(utils,str)
importFrom(utils,tail)
importFrom(utils,untar)
useDynLib(LandR)
